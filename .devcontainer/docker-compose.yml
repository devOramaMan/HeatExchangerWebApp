version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    networks:
      - dev-network
    environment:
      - PG_DB_HOST=${PG_DB_HOST}
      - PG_DB_PORT=${PG_DB_PORT}
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_DB_USER=${PG_DB_USER}
      - PG_DB_PASSWORD=${PG_DB_PASSWORD}
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: PG_HExM
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${PG_DB_USER}
      - POSTGRES_PASSWORD=${PG_DB_PASSWORD}
      - POSTGRES_DB=${PG_DB_NAME}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    networks:
      dev-network:
        aliases:
          - PG_HExM
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_DB_USER} -d ${PG_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres-data:
    driver: local

networks:
  dev-network:
    driver: bridge